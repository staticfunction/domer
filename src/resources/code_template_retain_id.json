{
    "newDomClass": [
        "class className# {",
        "",
        "    rootNodes: HTMLElement[];",
        "    parent: HTMLElement;",
        "elements#",
        "",
        "    constructor() {",
        "        this.rootNodes = [];",
        "creation#",
        "stacking#",
        "    }",
        "",
        "    appendTo(parent:HTMLElement): void {",
        "        this.remove();",
        "        this.parent = parent;",
        "        this.rootNodes.forEach((node:HTMLElement) => {",
        "            this.parent.appendChild(node);",
        "        });",
        "    }",
        "    remove(): void {",
        "        if(!this.parent)",
        "            return;",
        "        this.rootNodes.forEach((node:HTMLElement) => {",
        "            this.parent.removeChild(node);",
        "        });",
        "        this.parent = null;",
        "    }",
        "}",
        "",
        "export = className#;"
    ],
    "uniqueElement": "    instanceName#: elementType#;",
    "accessNameLocal": "instanceName#",
    "accessNameMember": "this.instanceName#",
    "createElementLocal": "        var instanceName# = document.createElement('type#');",
    "createElementMember": "        this.instanceName# = document.createElement('type#');",
    "createText": "        var instanceName# = document.createTextNode('text#');",
    "setAttributeOther": "        accessName#.setAttribute('key#', 'value#');",
    "setAttributeId": "        accessName#.setAttribute('id', 'id#');",
    "appendChild": "        parent#.appendChild(child#);",
    "appendToRoot": "        this.rootNodes.push(accessName#);",
    "fileName": "className#.ts"
}